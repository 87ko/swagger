openapi: 3.0.0
info:
  title: Shop Review API
  description: |
    # Feature
    - Get reviews
    - Post review
  termsOfService: https://sample-testylog.com/terms/
  contact:
    name: Customer Support
    url: https://sample-tastylog.com/support
    email: support@sample-tastylog.com
  license:
    name: MIT License
    url: https://spdx.org/licenses/MIT.html
  version: 1.0.0
servers:
- url: "http://localhost:{port}"
  description: Local development
  variables:
    port:
      enum:
      - "3000"
      - "8080"
      default: "3000"
- url: https://it1.tastylog.com
  description: Integration Test
- url: https://stg.tastylog.com
  description: Staging
- url: https://api.tastylog.com
  description: Production
security:
- apiKey_auth: []
tags:
- name: reviews
  description: Shop review operation
paths:
  /shops/{shopId}/reviews:
    get:
      tags:
      - reviews
      summary: Get specified shop reviews
      description: "(description): Get specified shop reviews"
      operationId: shopsShopIdReviewsGET
      parameters:
      - name: shopId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: Success operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
                x-content-type: application/json
      deprecated: false
      security: []
      x-swagger-router-controller: Reviews
    post:
      tags:
      - reviews
      summary: Create review
      description: "(description): Create review"
      operationId: shopsShopIdReviewsPOST
      parameters:
      - name: shopId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: x-api-key
        in: header
        description: Request user's identifier
        required: false
        style: simple
        explode: false
        schema:
          type: string
        example: XXXX-XXXX-XXXX
      - name: token
        in: cookie
        description: One time token
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: XXXX-XXXX-XXXX
      requestBody:
        description: Contents of review
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Review'
        required: true
      responses:
        "201":
          description: Success operation
          headers:
            location:
              description: New URL of created review
              style: simple
              explode: false
              schema:
                type: string
                format: url
        "400":
          description: Client side error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientError'
      x-swagger-router-controller: Reviews
components:
  schemas:
    Review:
      type: object
      properties:
        score:
          type: integer
          example: 3
        comment:
          type: string
          example: Delicious
      example:
        score: 3
        comment: Delicious
    ClientError:
      type: object
      properties:
        code:
          type: string
        type:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ClientError_errors'
    ClientError_errors:
      type: object
      properties:
        field:
          type: string
        code:
          type: string
  responses:
    "400-BadRequest":
      description: Client side error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientError'
  parameters:
    ShopId:
      name: shopId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
  securitySchemes:
    apiKey_auth:
      type: apiKey
      description: API Key authorization
      name: X-Api-Key
      in: header
